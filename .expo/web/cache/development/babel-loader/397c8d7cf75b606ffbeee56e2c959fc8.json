{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var value = {\n    username: 'test',\n    password: 'test123',\n    notes: []\n  };\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('test', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('test'));\n\n          case 3:\n            jsonValue = _context2.sent;\n\n            if (jsonValue != null) {\n              console.log(JSON.parse(jsonValue));\n              console.log(JSON.parse(jsonValue).password);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var checkCredentials = function checkCredentials() {\n    console.log(userName, Password);\n  };\n\n  return React.createElement(View, {\n    style: StyleSheet.container\n  }, React.createElement(Text, null, \" in Login\"), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUserName,\n    placeholder: \"Enter Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    placeholder: \"Enter password\"\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      checkCredentials();\n    }\n  })), React.createElement(Button, {\n    title: \"store data\",\n    onPress: function onPress() {\n      storeData(value);\n    }\n  }));\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Login.js"],"names":["React","useState","AsyncStorage","Login","userName","setUserName","Password","setPassword","value","username","password","notes","storeData","jsonValue","JSON","stringify","setItem","getData","getItem","console","log","parse","checkCredentials","StyleSheet","container","styles","input","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,kBAA6BF,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA6BJ,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAgBC,WAAhB;;AACA,MAAIC,KAAK,GAAG;AAACC,IAAAA,QAAQ,EAAC,MAAV;AAAiBC,IAAAA,QAAQ,EAAC,SAA1B;AAAoCC,IAAAA,KAAK,EAAC;AAA1C,GAAZ;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENK,YAAAA,SAFM,GAEMC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAFN;AAAA;AAAA,6CAGNN,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BH,SAA7B,CAHM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASJ,MAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcf,YAAY,CAACgB,OAAb,CAAqB,MAArB,CAFd;;AAAA;AAEJL,YAAAA,SAFI;;AAGV,gBAAIA,SAAS,IAAI,IAAjB,EAAsB;AACpBM,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAL,CAAWR,SAAX,CAAZ;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAL,CAAWR,SAAX,EAAsBH,QAAlC;AACD;;AANS;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWE,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAI;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EAAqBE,QAArB;AAED,GAHD;;AAKE,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,UAAU,CAACC;AAAxB,KACA,oBAAC,IAAD,oBADA,EAEA,oBAAC,IAAD,QACA,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEC,MAAM,CAACC,KADd;AAEA,IAAA,YAAY,EAAErB,WAFd;AAGA,IAAA,WAAW,EAAC;AAHZ,IADA,EAMF,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEoB,MAAM,CAACC,KADhB;AAEE,IAAA,YAAY,EAAEnB,WAFhB;AAGE,IAAA,WAAW,EAAC;AAHd,IANE,EAWA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,mBAAI;AAACe,MAAAA,gBAAgB;AAAG;AAAvD,IAXA,CAFA,EAeA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAACV,MAAAA,SAAS,CAACJ,KAAD,CAAT;AAAiB;AAA1D,IAfA,CADJ;AAmBH,CAhDD;;AAiDA,eAAeL,KAAf;AACA,IAAMsB,MAAM,GAAGF,UAAU,CAACI,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View,TextInput } from 'react-native';\r\nconst Login = () => {\r\n    const [userName,setUserName]=useState('');\r\n    const [Password,setPassword]=useState('')\r\n    let value = {username:'test',password:'test123',notes:[]};\r\n    const storeData = async (value) => {\r\n        try {\r\n          const jsonValue = JSON.stringify(value)\r\n          await AsyncStorage.setItem('test', jsonValue)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n      \r\nconst getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('test')\r\n      if (jsonValue != null){\r\n        console.log(JSON.parse(jsonValue));\r\n        console.log(JSON.parse(jsonValue).password)\r\n      }\r\n    } catch(e) {\r\n      // error reading value\r\n    }\r\n  }\r\n  const checkCredentials = ()=>{\r\n    console.log(userName,Password);\r\n\r\n  }\r\n  \r\n    return (\r\n        <View style={StyleSheet.container}>\r\n        <Text> in Login</Text>\r\n        <View>\r\n        <TextInput\r\n        style={styles.input}\r\n        onChangeText={setUserName}\r\n        placeholder=\"Enter Username\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={setPassword}\r\n        placeholder=\"Enter password\"\r\n      />\r\n        <Button title=\"Login\" onPress={()=>{checkCredentials()}}></Button>\r\n        </View>\r\n        <Button title=\"store data\" onPress={()=>{storeData(value)}}></Button>\r\n        </View>\r\n    );\r\n}\r\nexport default Login;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}
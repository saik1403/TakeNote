{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Notes = function Notes(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      notes = _useState6[0],\n      setNotes = _useState6[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [userData]);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context3.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(\"At getting data\", data);\n            setUserData(data);\n            setCurrentUser(data.currentUser.username);\n            console.log(currentUser);\n\n            if (!data.notes.name) {\n              userData.notes[currentUser] = [];\n              storeData(userData);\n            }\n\n            console.log(userData);\n            setNotes(userData.notes[currentUser]);\n            _context3.next = 16;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  var showNotes = function showNotes() {\n    return React.createElement(View, null, userData.notes[currentUser].map(function (note, index) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'grey',\n          padding: 5,\n          marginVertical: 5,\n          flex: 1,\n          flexDirection: 'column',\n          elevation: 2\n        },\n        onPress: function onPress() {\n          navigation.navigate('Notes', Notes);\n        },\n        key: index\n      }, React.createElement(Text, {\n        style: {\n          marginHorizontal: 4\n        }\n      }, note.title), React.createElement(Text, null, note.description));\n    }));\n  };\n\n  var logout = function logout() {\n    userData.currentUser.username = \"\";\n    storeData(userData);\n    navigation.navigate('Login');\n  };\n\n  var addNotes = function addNotes() {\n    navigation.navigate('AddNotes');\n  };\n\n  return React.createElement(View, null, React.createElement(Text, null, \"In Notes\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      addNotes();\n    }\n  }, React.createElement(Text, null, \"Add Notes\")), React.createElement(View, null, currentUser && showNotes()));\n};\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Notes.js"],"names":["React","useEffect","useState","AsyncStorage","Notes","navigation","userData","setUserData","currentUser","setCurrentUser","notes","setNotes","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","username","name","showNotes","map","note","index","borderWidth","borderColor","padding","marginVertical","flex","flexDirection","elevation","navigate","marginHorizontal","title","description","logout","addNotes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nconst Notes = ({ navigation }) => {\r\n  const [userData, setUserData] = useState({});\r\n  //let userData;\r\n  //let currentUser;\r\n  //let notes;\r\n  const [currentUser,setCurrentUser]=useState('');\r\n  const [notes,setNotes]=useState([]);\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    await getData();\r\n    //await getNotes();\r\n  }, [userData]);\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n      const data = jsonValue && JSON.parse(jsonValue);\r\n      console.log(\"At getting data\", data);\r\n      //userData = data;\r\n       setUserData(data);\r\n       setCurrentUser(data.currentUser.username);\r\n      //currentUser = data.currentUser.username;\r\n      console.log(currentUser);\r\n      if (!data.notes.name) {\r\n        userData.notes[currentUser] = [];\r\n        storeData(userData);\r\n      }\r\n      console.log(userData);\r\n      setNotes(userData.notes[currentUser])\r\n      //notes = userData.notes[currentUser];\r\n      //getNotes();\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  }\r\n  const showNotes = () => {\r\n    return (\r\n      <View >\r\n        {userData.notes[currentUser].map((note, index) => {\r\n          return (\r\n            <TouchableOpacity\r\n              style={{ borderWidth: 1, borderColor: 'grey', padding: 5, marginVertical: 5, flex: 1, flexDirection: 'column', elevation: 2 }}\r\n              onPress={() => { navigation.navigate('Notes', Notes); }}\r\n              key={index}\r\n            >\r\n              <Text style={{ marginHorizontal: 4 }}>{note.title}</Text>\r\n              <Text>{note.description}</Text>\r\n            </TouchableOpacity>\r\n          )\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n  const logout = () => {\r\n    userData.currentUser.username = \"\";\r\n    //console.log(\"userData\",userData);\r\n    storeData(userData);\r\n    navigation.navigate('Login');\r\n  }\r\n  const addNotes=()=>{\r\n    navigation.navigate('AddNotes');\r\n  }\r\n  return (\r\n    <View>\r\n      <Text>In Notes</Text>\r\n      <TouchableOpacity onPress={() => {\r\n        addNotes()\r\n      }}>\r\n        <Text>Add Notes</Text>\r\n      </TouchableOpacity>\r\n      <View >\r\n        {currentUser && showNotes()}\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}
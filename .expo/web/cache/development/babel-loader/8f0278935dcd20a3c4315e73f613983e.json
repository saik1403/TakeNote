{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DELETE_NOTE, STORE_NOTES } from \"./noteTypes\";\nimport initialState from \"../initialState\";\nimport noteActions from \"..\";\n\nvar noteReducer = function noteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DELETE_NOTE:\n      filterdNotes = state.notes.filter(function (item) {\n        return item.id !== state.id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: action.payload,\n        user: action.user,\n        notes: filterdNotes\n      });\n\n    case STORE_NOTES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notes: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/redux/note/noteReducer.js"],"names":["DELETE_NOTE","STORE_NOTES","initialState","noteActions","noteReducer","state","action","type","filterdNotes","notes","filter","item","id","payload","user"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP,MAAwB,IAAxB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACIQ,MAAAA,YAAY,GAACH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYP,KAAK,CAACO,EAA5B;AAAA,OAAnB,CAAb;AACJ,6CACOP,KADP;AAEIO,QAAAA,EAAE,EAAEN,MAAM,CAACO,OAFf;AAGIC,QAAAA,IAAI,EAAER,MAAM,CAACQ,IAHjB;AAIIL,QAAAA,KAAK,EAAED;AAJX;;AAMA,SAAKP,WAAL;AAAkB,6CACXI,KADW;AAEdI,QAAAA,KAAK,EAAEH,MAAM,CAACO;AAFA;;AAKlB;AAAS,aAAOR,KAAP;AAdb;AAgBH,CAjBD;;AAkBA,eAAeD,WAAf","sourcesContent":["import { DELETE_NOTE, STORE_NOTES } from \"./noteTypes\";\r\nimport initialState from \"../initialState\";\r\nimport noteActions from \"..\";\r\n// const initialState = {\r\n//     id: '',\r\n//     notes: {}\r\n\r\n// }\r\n\r\nconst noteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DELETE_NOTE:\r\n            filterdNotes=state.notes.filter((item) => item.id !== state.id);\r\n        return {\r\n            ...state,\r\n            id: action.payload,\r\n            user: action.user,\r\n            notes: filterdNotes\r\n        }\r\n        case STORE_NOTES: return {\r\n            ...state,\r\n            notes: action.payload\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\nexport default noteReducer;"]},"metadata":{},"sourceType":"module"}
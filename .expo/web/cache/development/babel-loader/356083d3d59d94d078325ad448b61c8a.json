{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { ADD_NOTE } from \"../redux/note/noteTypes\";\nimport { v4 as uuidv4 } from 'uuid';\n\nvar AddNotes = function AddNotes(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(route.params),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(data);\n            setUserData(data);\n            console.log(userData);\n            return _context2.abrupt(\"return\", data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var saveNotes = function saveNotes() {\n    if (!title || title === '') {\n      setError('Please Enter Title');\n      return;\n    }\n\n    if (!description || description === '') {\n      setError('Please enter Description');\n      return;\n    }\n\n    var note = {\n      id: uuidv4(),\n      title: title,\n      description: description\n    };\n    console.log(\"at save Notes\", userData.currentUser.username, note);\n    var username = userData.currentUser.username;\n    userData.notes[username].push(note);\n    storeData(userData);\n    setTitle('');\n    setDescription('');\n    navigation.navigate('Notes');\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.addtext\n  }, \" Add Notes \"), React.createElement(View, {\n    style: styles.addnote\n  }, React.createElement(Text, {\n    style: styles.lables\n  }, \"Title\"), React.createElement(TextInput, {\n    style: styles.inputbox,\n    onChangeText: setTitle,\n    value: title,\n    placeholder: \"Enter Title\"\n  }), React.createElement(Text, {\n    style: styles.lables\n  }, \"Description\"), React.createElement(TextInput, {\n    style: styles.inputbox1,\n    multiline: true,\n    onChangeText: setDescription,\n    value: description,\n    placeholder: \"Enter Description\"\n  }), React.createElement(Text, null, \" \", error, \" \"), React.createElement(TouchableOpacity, {\n    style: styles.savebutton,\n    onPress: function onPress() {\n      saveNotes();\n    }\n  }, React.createElement(Text, null, \"Save\"))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addNote: function (_addNote) {\n      function addNote(_x) {\n        return _addNote.apply(this, arguments);\n      }\n\n      addNote.toString = function () {\n        return _addNote.toString();\n      };\n\n      return addNote;\n    }(function (note) {\n      return dispatch(addNote(note));\n    })\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 0,\n    padding: 0,\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'aquamarine',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Arial'\n  },\n  addtext: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'Black',\n    padding: 3,\n    fontSize: 30\n  },\n  addnote: {\n    justifyContent: 'center',\n    height: 470,\n    width: 320,\n    overflow: 'hidden',\n    marginTop: 3,\n    padding: 5,\n    backgroundColor: 'mintcream',\n    borderRadius: 15\n  },\n  inputbox: {\n    flexDirection: 'row',\n    height: 40,\n    padding: 10,\n    borderRadius: 7,\n    marginHorizontal: 10,\n    border: 3,\n    borderColor: 'white'\n  },\n  inputbox1: {\n    flexDirection: 'row',\n    height: 200,\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 'Top',\n    marginHorizontal: 10,\n    border: 3,\n    borderColor: 'white'\n  },\n  savebutton: {\n    marginTop: 'auto',\n    alignItems: \"center\",\n    backgroundColor: \"yellowgreen\",\n    padding: 10\n  },\n  lables: {\n    padding: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default connect(mapDispatchToProps)(AddNotes);","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/AddNotes.js"],"names":["React","useEffect","useState","AsyncStorage","connect","ADD_NOTE","v4","uuidv4","AddNotes","navigation","route","title","setTitle","description","setDescription","params","userData","setUserData","error","setError","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","saveNotes","note","id","currentUser","username","notes","push","navigate","styles","container","addtext","addnote","lables","inputbox","inputbox1","savebutton","mapDispatchToProps","dispatch","addNote","StyleSheet","create","margin","padding","flex","flexDirection","backgroundColor","alignItems","justifyContent","fontFamily","fontWeight","textAlign","color","fontSize","height","width","overflow","marginTop","borderRadius","marginHorizontal","border","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { ADD_NOTE } from '../redux/note/noteTypes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst AddNotes = ({ navigation,route })=>{\r\n    const [title,setTitle]=useState('');\r\n    const [description,setDescription]=useState('');\r\n    const [userData, setUserData] = useState(route.params);\r\n    const [error,setError]=useState('');\r\n    const storeData = async (value) => {\r\n        try {\r\n          const jsonValue = JSON.stringify(value)\r\n          await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n      // useEffect(() => {\r\n      //   getData();\r\n      // },[]);\r\n    const getData = async () => {\r\n        try {\r\n          const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n          const data = jsonValue && JSON.parse(jsonValue);\r\n          console.log(data);\r\n          setUserData(data);\r\n          console.log(userData);\r\n          return data;\r\n        } catch (e) {\r\n          // error reading value\r\n        }\r\n      }\r\n      const saveNotes=()=>{\r\n        if (!title || title === '') {\r\n            setError('Please Enter Title');\r\n            return\r\n          }\r\n          if (!description || description === '') {\r\n            setError('Please enter Description');\r\n            return\r\n          }\r\n          const note={\r\n              id:uuidv4(),\r\n              title: title,\r\n              description: description\r\n          };\r\n        console.log(\"at save Notes\",userData.currentUser.username,note);\r\n        const username=userData.currentUser.username;\r\n        userData.notes[username].push(note);\r\n        storeData(userData);\r\n        setTitle('');\r\n        setDescription('');\r\n        navigation.navigate('Notes');\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n      <Text style={styles.addtext}> Add Notes </Text>\r\n      <View style={styles.addnote}>\r\n        <Text style={styles.lables}>Title</Text>\r\n        <TextInput\r\n          style={styles.inputbox}\r\n          onChangeText={setTitle}\r\n          value ={title}\r\n          placeholder=\"Enter Title\"\r\n        />\r\n        <Text style={styles.lables}>Description</Text>\r\n        <TextInput\r\n          style={styles.inputbox1}\r\n          multiline={true}\r\n          onChangeText={setDescription}\r\n          value ={description}\r\n          placeholder=\"Enter Description\"\r\n        />\r\n        <Text> {error} </Text>\r\n        <TouchableOpacity\r\n          style={styles.savebutton}\r\n          onPress={() => {\r\n            saveNotes();\r\n          }}\r\n        >\r\n          <Text>Save</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n      );\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNote: (note) => dispatch(addNote(note)),\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      margin: 0,\r\n      padding: 0,\r\n      flex:1,\r\n      flexDirection:'column',\r\n      backgroundColor: 'aquamarine',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fontFamily: 'Arial',\r\n    },\r\n    addtext: {\r\n      fontWeight: 'bold',\r\n      textAlign: 'center',\r\n      color: 'Black',\r\n      padding: 3,\r\n      fontSize: 30,\r\n    },\r\n    addnote: {\r\n      justifyContent: 'center',\r\n      height: 470,\r\n      width: 320,\r\n      overflow: 'hidden',\r\n      marginTop: 3,\r\n      padding: 5,\r\n      backgroundColor: 'mintcream',\r\n      borderRadius: 15,\r\n    },\r\n    inputbox: {\r\n      flexDirection: 'row',\r\n      height: 40,\r\n      padding: 10,\r\n      borderRadius: 7,\r\n      marginHorizontal: 10,\r\n      border: 3,\r\n      borderColor: 'white'\r\n    },\r\n    inputbox1: {\r\n        flexDirection: 'row',\r\n        height: 200,\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginTop:'Top',\r\n        marginHorizontal: 10,\r\n        border: 3,\r\n        borderColor: 'white'\r\n      },\r\n    savebutton: {\r\n      marginTop:'auto',\r\n      alignItems: \"center\",\r\n      backgroundColor: \"yellowgreen\",\r\n      padding: 10\r\n    },\r\n    lables: {\r\n      padding: 15,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }\r\n  });\r\nexport default connect(mapDispatchToProps)(AddNotes);"]},"metadata":{},"sourceType":"module"}
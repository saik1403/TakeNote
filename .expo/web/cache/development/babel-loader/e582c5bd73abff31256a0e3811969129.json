{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Notes = function Notes(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getNotes());\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context3.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(data);\n            setUserData(data);\n            console.log(userData);\n            _context3.next = 12;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var logout = function logout() {\n    userData.currentUser.username = \"\";\n    consoole.log(\"userData\", userData);\n    storeData(userData);\n    navigation.navigate('Login');\n  };\n\n  var getNotes = function getNotes() {\n    console.log(userData);\n  };\n\n  return React.createElement(View, null, React.createElement(Text, null, \"In Notes\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      logout();\n    }\n  }, React.createElement(Text, null, \"Logout\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Notes.js"],"names":["React","useEffect","useState","AsyncStorage","Notes","navigation","userData","setUserData","storeData","value","jsonValue","JSON","stringify","setItem","getData","getNotes","getItem","data","parse","console","log","logout","currentUser","username","consoole","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAC7B,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,YAAAA,SAFM,GAEMC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFN;AAAA;AAAA,6CAGNN,YAAY,CAACU,OAAb,CAAqB,kBAArB,EAAyCH,SAAzC,CAHM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQET,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFa,OAAO,EADL;;AAAA;AAAA;AAAA,6CAEFC,QAAQ,EAFN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAGN,EAHM,CAAT;;AAIA,MAAMD,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYX,YAAY,CAACa,OAAb,CAAqB,kBAArB,CAFZ;;AAAA;AAENN,YAAAA,SAFM;AAGNO,YAAAA,IAHM,GAGCP,SAAS,IAAIC,IAAI,CAACO,KAAL,CAAWR,SAAX,CAHd;AAIZS,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,YAAAA,WAAW,CAACU,IAAD,CAAX;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AANY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWF,MAAMe,MAAM,GAAC,SAAPA,MAAO,GAAI;AACbf,IAAAA,QAAQ,CAACgB,WAAT,CAAqBC,QAArB,GAA8B,EAA9B;AACAC,IAAAA,QAAQ,CAACJ,GAAT,CAAa,UAAb,EAAwBd,QAAxB;AACAE,IAAAA,SAAS,CAACF,QAAD,CAAT;AACAD,IAAAA,UAAU,CAACoB,QAAX,CAAoB,OAApB;AACH,GALD;;AAMA,MAAMV,QAAQ,GAAC,SAATA,QAAS,GAAI;AACfI,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAKH,GAND;;AAOA,SACI,oBAAC,IAAD,QACI,oBAAC,IAAD,mBADJ,EAEI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAI;AAC3Be,MAAAA,MAAM;AACT;AAFD,KAGI,oBAAC,IAAD,iBAHJ,CAFJ,CADJ;AAWH,CAjDD;;AAkDA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nconst Notes = ({ navigation })=> {\r\n    const [userData, setUserData] = useState({});\r\n    const storeData = async (value) => {\r\n        try {\r\n          const jsonValue = JSON.stringify(value)\r\n          await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n      useEffect(async() => {\r\n        await getData();\r\n        await getNotes();\r\n      }, []);\r\n      const getData = async () => {\r\n        try {\r\n          const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n          const data = jsonValue && JSON.parse(jsonValue);\r\n          console.log(data);\r\n          setUserData(data);\r\n          console.log(userData);\r\n        } catch (e) {\r\n          // error reading value\r\n        }\r\n      }\r\n    const logout=()=>{\r\n        userData.currentUser.username=\"\";\r\n        consoole.log(\"userData\",userData);\r\n        storeData(userData);\r\n        navigation.navigate('Login');\r\n    }\r\n    const getNotes=()=>{\r\n        console.log(userData);\r\n        //let name=userData.currentUser.username;\r\n        // for(let userName in userData.Notes){\r\n        //     console.log(userName);\r\n        // }\r\n    }\r\n    return (\r\n        <View> \r\n            <Text>In Notes</Text>\r\n            <TouchableOpacity onPress={()=>{\r\n                logout()\r\n            }}>\r\n                <Text>Logout</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    \r\n    );\r\n}\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}
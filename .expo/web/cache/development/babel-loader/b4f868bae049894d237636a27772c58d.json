{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DELETE_NOTE } from \"./noteTypes\";\nvar initialState = {\n  id: '123'\n};\n\nvar noteReducer = function noteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DELETE_NOTE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: state.id - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/redux/note/noteReducer.js"],"names":["DELETE_NOTE","initialState","id","noteReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT;AACA,IAAMC,YAAY,GAAC;AACfC,EAAAA,EAAE,EAAC;AADY,CAAnB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvBH,YAAuB;AAAA,MAAVI,MAAU;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAL;AAAkB,6CACXI,KADW;AAEdF,QAAAA,EAAE,EAAEE,KAAK,CAACF,EAAN,GAAWG,MAAM,CAACE;AAFR;;AAKhB;AAAS,aAAOH,KAAP;AANf;AAQH,CATD;;AAUA,eAAeD,WAAf","sourcesContent":["import { DELETE_NOTE } from \"./noteTypes\";\r\nconst initialState={\r\n    id:'123'\r\n}\r\n\r\nconst noteReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case DELETE_NOTE: return {\r\n            ...state,\r\n            id: state.id - action.payload\r\n          }\r\n      \r\n          default: return state\r\n    }\r\n}\r\nexport default noteReducer;"]},"metadata":{},"sourceType":"module"}
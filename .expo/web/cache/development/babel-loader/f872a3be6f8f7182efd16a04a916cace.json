{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Notes = function Notes(_ref) {\n  var navigation = _ref.navigation;\n  var userData;\n  var currentUser;\n  var notes;\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context3.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(\"At getting data\", data);\n            userData = data;\n            currentUser = data.currentUser.username;\n            console.log(currentUser);\n\n            if (!data.notes.name) {\n              userData.notes[currentUser] = [];\n              storeData(userData);\n            }\n\n            console.log(userData);\n            notes = userData.notes[currentUser];\n            showNotes();\n            _context3.next = 17;\n            break;\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var showNotes = function showNotes() {\n    console.log(userData.notes[1]);\n    return React.createElement(View, null, userData.notes[1].map(function (note, index) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'grey',\n          padding: 5,\n          marginVertical: 5,\n          flex: 1,\n          flexDirection: 'row',\n          elevation: 2\n        },\n        onPress: function onPress() {\n          navigation.navigate('Notes', Notes);\n        },\n        key: index\n      }, React.createElement(Text, {\n        style: {\n          marginHorizontal: 4\n        }\n      }, note.title))(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\n    }));\n  };\n\n  var logout = function logout() {\n    userData.currentUser.username = \"\";\n    storeData(userData);\n    navigation.navigate('Login');\n  };\n\n  return React.createElement(View, null, React.createElement(Text, null, \"In Notes\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      logout();\n    }\n  }, React.createElement(Text, null, \"Logout\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Notes.js"],"names":["React","useEffect","useState","AsyncStorage","Notes","navigation","userData","currentUser","notes","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","username","name","showNotes","map","note","index","borderWidth","borderColor","padding","marginVertical","flex","flexDirection","elevation","navigate","marginHorizontal","title","logout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nconst Notes = ({ navigation }) => {\r\n  //const [userData, setUserData] = useState({});\r\n  let userData;\r\n  let currentUser;\r\n  let notes;\r\n  // const [currentUser,setCurrentUser]=useState('');\r\n  // const [notes,setNotes]=useState({});\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    await getData();\r\n    //await getNotes();\r\n  }, []);\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n      const data = jsonValue && JSON.parse(jsonValue);\r\n      console.log(\"At getting data\", data);\r\n      userData = data;\r\n      // setUserData(data);\r\n      // setCurrentUser(data.currentUser.username);\r\n      currentUser = data.currentUser.username;\r\n      console.log(currentUser);\r\n      if (!data.notes.name) {\r\n        userData.notes[currentUser] = [];\r\n        storeData(userData);\r\n      }\r\n      console.log(userData);\r\n      notes = userData.notes[currentUser];\r\n      showNotes();\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  }\r\n  const showNotes=()=>{\r\n    console.log(userData.notes[1]);\r\n    return(\r\n      <View >\r\n                {userData.notes[1].map((note, index) => {\r\n                    return (\r\n                        <TouchableOpacity\r\n                            style={{ borderWidth: 1, borderColor: 'grey', padding: 5, marginVertical: 5, flex: 1, flexDirection: 'row', elevation: 2 }}\r\n                            onPress={() => { navigation.navigate('Notes', Notes); }}\r\n                            key={index}\r\n                        >\r\n                            <Text style={{ marginHorizontal: 4 }}>{note.title}</Text>\r\n                        </TouchableOpacity>\r\n                    )``\r\n                })}\r\n            </View>\r\n    );\r\n  }\r\n  const logout = () => {\r\n    userData.currentUser.username = \"\";\r\n    //console.log(\"userData\",userData);\r\n    storeData(userData);\r\n    navigation.navigate('Login');\r\n  }\r\n  // const getNotes=()=>{\r\n  //     console.log(userData);\r\n  //     //let name=userData.currentUser.username;\r\n  //     // for(let userName in userData.Notes){\r\n  //     //     console.log(userName);\r\n  //     // }\r\n  // }\r\n  return (\r\n    <View>\r\n      <Text>In Notes</Text>\r\n      <TouchableOpacity onPress={() => {\r\n        logout()\r\n      }}>\r\n        <Text>Logout</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n\r\n  );\r\n}\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var value = {\n    username: 'test',\n    password: 'test123',\n    notes: []\n  };\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('test', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  });\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('test'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = jsonValue != null ? JSON.parse(jsonValue) : null;\n            console.log(data);\n            setUserData(data);\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var checkCredentials = function checkCredentials() {\n    console.log(userName, Password);\n    var val = getData();\n    console.log(val);\n    console.log(userData);\n\n    if (userData == null) {\n      alert('Create Account');\n      return false;\n    } else {\n      if (Password == userData.Password) {\n        return true;\n      }\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \" in Login\"), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUserName,\n    placeholder: \"Enter Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    placeholder: \"Enter password\"\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      if (checkCredentials()) {\n        return navigation.navigate('Notes');\n      }\n    }\n  })), React.createElement(Button, {\n    title: \"store data\",\n    onPress: function onPress() {\n      storeData(value);\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Login.js"],"names":["React","useEffect","useState","AsyncStorage","Login","navigation","userName","setUserName","Password","setPassword","userData","setUserData","value","username","password","notes","storeData","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","checkCredentials","val","alert","styles","container","input","navigate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput } from 'react-native';\r\nconst Login = ({ navigation }) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [userData,setUserData] = useState(null);\r\n  let value = { username: 'test', password: 'test123', notes: [] };\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('test', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    getData();\r\n  }); \r\n  const getData = async () => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem('test');\r\n    const data = jsonValue != null ? JSON.parse(jsonValue) : null;\r\n    console.log(data);\r\n    setUserData(data);\r\n    return data;\r\n  } catch(e) {\r\n    // error reading value\r\n  }\r\n}\r\n\r\n  const checkCredentials = () => {\r\n    console.log(userName, Password);\r\n    let val=getData();\r\n    console.log(val);\r\n    console.log(userData);\r\n    if (userData == null) {\r\n      alert('Create Account');\r\n      return false;\r\n    }\r\n    else {\r\n      if (Password == userData.Password) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text> in Login</Text>\r\n      <View>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={setUserName}\r\n          placeholder=\"Enter Username\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={setPassword}\r\n          placeholder=\"Enter password\"\r\n        />\r\n        <Button title=\"Login\" onPress={() => {\r\n          if(checkCredentials()) {\r\n            return navigation.navigate('Notes');\r\n           }\r\n        }}></Button>\r\n      </View>\r\n      <Button title=\"store data\" onPress={() => { storeData(value) }}></Button>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}
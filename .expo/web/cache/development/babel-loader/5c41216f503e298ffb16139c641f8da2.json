{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar ShowNote = function ShowNote(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var data = route.params;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, _data;\n\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            _data = jsonValue && JSON.parse(jsonValue);\n            console.log(_data);\n            setUserData(_data);\n            console.log(userData);\n            return _context2.abrupt(\"return\", _data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            console.log(\"Log out pressed\", userData);\n            userData.currentUser.username = '';\n            storeData(userData);\n            navigation.navigate('Login');\n          },\n          title: \"Logout\"\n        });\n      }\n    });\n  }, [navigation, userData]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: 'bold',\n      padding: 6,\n      margin: 3,\n      marginVertical: 20,\n      borderColor: 'red',\n      borderWidth: 1,\n      backgroundColor: '#FFD580'\n    }\n  }, data.title), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      height: 450,\n      borderColor: 'grey',\n      backgroundColor: '#FFFDD9'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'normal',\n      padding: 6,\n      paddingVertical: 15\n    }\n  }, data.description)), React.createElement(TouchableOpacity, {\n    style: styles.savebutton,\n    onPress: function onPress() {\n      navigation.goBack();\n    }\n  }, React.createElement(Text, null, \"Back\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 0,\n    padding: 0,\n    flex: 1,\n    flexDirection: 'column'\n  },\n  savebutton: {\n    marginTop: 'auto',\n    alignItems: \"center\",\n    backgroundColor: \"yellowgreen\",\n    padding: 10\n  }\n});\nexport default ShowNote;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/ShowNote.js"],"names":["React","useEffect","useState","ShowNote","route","navigation","data","params","userData","setUserData","storeData","value","jsonValue","JSON","stringify","AsyncStorage","setItem","getData","getItem","parse","console","log","useLayoutEffect","setOptions","headerRight","currentUser","username","navigate","styles","container","fontSize","fontWeight","padding","margin","marginVertical","borderColor","borderWidth","backgroundColor","title","height","paddingVertical","description","savebutton","goBack","StyleSheet","create","flex","flexDirection","marginTop","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Button, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nconst ShowNote = ({ route, navigation }) => {\r\n    const data = route.params;\r\n    const [userData, setUserData] = useState({});\r\n    const storeData = async (value) => {\r\n        try {\r\n            const jsonValue = JSON.stringify(value)\r\n            await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n        } catch (e) {\r\n            // saving error\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    const getData = async () => {\r\n        try {\r\n            const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n            const data = jsonValue && JSON.parse(jsonValue);\r\n            console.log(data);\r\n            setUserData(data);\r\n            console.log(userData);\r\n            return data;\r\n        } catch (e) {\r\n            // error reading value\r\n        }\r\n    }\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => (\r\n                <Button onPress={() => {\r\n                    console.log(\"Log out pressed\",userData);\r\n                    userData.currentUser.username = '';\r\n                    storeData(userData);\r\n                    navigation.navigate('Login');\r\n                }} title=\"Logout\" />\r\n            ),\r\n        });\r\n    }, [navigation, userData]);\r\n    return (\r\n        <View style={styles.container}>\r\n            <ScrollView>\r\n                <Text style={{ fontSize: 15, fontWeight: 'bold', padding: 6, margin: 3, marginVertical: 20, borderColor: 'red', borderWidth: 1, backgroundColor: '#FFD580' }}>{data.title}</Text>\r\n                <View style={{ borderWidth: 1, height: 450, borderColor: 'grey', backgroundColor: '#FFFDD9' }}>\r\n                    <Text style={{ fontWeight: 'normal',padding:6,paddingVertical:15 }}>{data.description}</Text>\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={styles.savebutton}\r\n                    onPress={() => {\r\n                        navigation.goBack()\r\n                    }\r\n                    }\r\n                >\r\n                    <Text>Back</Text>\r\n                </TouchableOpacity>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        margin: 0,\r\n        padding: 0,\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    savebutton: {\r\n        marginTop: 'auto',\r\n        alignItems: \"center\",\r\n        backgroundColor: \"yellowgreen\",\r\n        padding: 10\r\n    }\r\n});\r\nexport default ShowNote;\r\n"]},"metadata":{},"sourceType":"module"}
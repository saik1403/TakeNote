{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from 'react-redux';\nimport { storeUsers as _storeUsers } from \"../redux/users/usersActions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CreateAccount from \"./CreateAccount\";\n\nvar Login = function Login(props) {\n  var _props$route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState((_props$route = props.route) != null && _props$route.params ? props.route.params : {}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(data);\n            setUserData(data);\n            props.storeUsers(data.users);\n\n            if (data.currentUser.username !== \"\") {\n              props.navigation.navigate('Notes');\n            }\n\n            console.log(userData);\n            return _context2.abrupt(\"return\", data);\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  var checkCredentials = function checkCredentials() {\n    if (!userName || userName === '') {\n      setError('Please Enter user name');\n      return;\n    }\n\n    if (!Password || Password === '') {\n      setError('Please enter Password');\n      return;\n    }\n\n    console.log(userName, Password);\n    console.log(userData);\n    var users = userData == null ? void 0 : userData.users;\n\n    if (!users) {\n      users = [];\n    }\n\n    if (userData) {\n      var isExist = false;\n\n      for (var i = 0; i < userData.users.length; i++) {\n        if (userData.users[i].username == userName) {\n          isExist = true;\n\n          if (Password == userData.users[i].password) {\n            console.log(\"in true\");\n            userData.currentUser.username = userName;\n            storeData(userData);\n            setUserName('');\n            setPassword('');\n            setError('');\n            props.navigation.navigate('Notes');\n          } else {\n            setError('Wrong Password');\n            return;\n          }\n        }\n      }\n\n      if (!isExist) {\n        console.log(\"Need to creat account\");\n        setError(\"User Doesn't Exist\");\n        return;\n      }\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.logintext\n  }, \" Take Note \"), React.createElement(View, {\n    style: styles.login\n  }, React.createElement(Text, {\n    style: styles.lables\n  }, \"User Name\"), React.createElement(TextInput, {\n    style: styles.inputbox,\n    onChangeText: setUserName,\n    value: userName,\n    placeholder: \"Enter Username\"\n  }), React.createElement(Text, {\n    style: styles.lables\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.inputbox,\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    value: Password,\n    placeholder: \"Enter password\"\n  }), React.createElement(Text, {\n    style: styles.error\n  }, \" \", error, \" \"), React.createElement(TouchableOpacity, {\n    style: styles.loginbutton,\n    onPress: function onPress() {\n      checkCredentials();\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.signup,\n    onPress: function onPress() {\n      props.navigation.navigate('CreateAccount', userData);\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      textDecorationLine: 'underline'\n    }\n  }, \"Sign Up\"))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    storeUsers: function storeUsers(users) {\n      dispatch(_storeUsers(users));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 0,\n    padding: 0,\n    flex: 1,\n    backgroundColor: 'bisque',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Arial'\n  },\n  container1: {\n    margin: 0,\n    padding: 0,\n    backgroundColor: '#fff',\n    fontFamily: 'Arial'\n  },\n  logintext: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'red',\n    padding: 20,\n    fontSize: 30\n  },\n  login: {\n    justifyContent: 'center',\n    height: 300,\n    width: 300,\n    overflow: 'hidden',\n    marginTop: 10,\n    padding: 5,\n    backgroundColor: 'mintcream',\n    borderRadius: 15\n  },\n  inputbox: {\n    flexDirection: 'row',\n    height: 40,\n    padding: 10,\n    borderRadius: 15,\n    marginHorizontal: 15,\n    border: 3,\n    borderColor: 'white'\n  },\n  loginbutton: {\n    marginTop: 20,\n    alignItems: \"center\",\n    backgroundColor: \"yellowgreen\",\n    padding: 10\n  },\n  signup: {\n    fontWeight: 'bold',\n    marginTop: 10,\n    justifyContent: 'flex-start',\n    alignContent: 'flex-end',\n    color: 'white',\n    alignItems: 'flex-end'\n  },\n  lables: {\n    padding: 15,\n    fontWeight: 600,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  error: {\n    fontWeight: 'bold',\n    color: 'red'\n  }\n});\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Login.js"],"names":["React","useEffect","useState","AsyncStorage","connect","storeUsers","CreateAccount","Login","props","userName","setUserName","Password","setPassword","route","params","userData","setUserData","error","setError","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","users","currentUser","username","navigation","navigate","checkCredentials","isExist","i","length","password","styles","container","logintext","login","lables","inputbox","loginbutton","color","fontWeight","signup","textDecorationLine","mapDispatchToProps","dispatch","StyleSheet","create","margin","padding","flex","backgroundColor","alignItems","justifyContent","fontFamily","container1","textAlign","fontSize","height","width","overflow","marginTop","borderRadius","flexDirection","marginHorizontal","border","borderColor","alignContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { connect } from 'react-redux';\r\nimport { storeUsers } from '../redux/users/usersActions';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport CreateAccount from './CreateAccount';\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [userData, setUserData] = useState(props.route?.params?props.route.params:{});\r\n  const [error, setError] = useState('');\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  // const navigateOnCondition = () => {\r\n  //   let condition = checkCredentials();\r\n  //   console.log(condition);\r\n  //   if (condition) {\r\n  //     navigation.navigate('Notes');\r\n  //   }\r\n  // }\r\n  useEffect(() => {\r\n    getData();\r\n  },[]);\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n      const data = jsonValue && JSON.parse(jsonValue);\r\n      console.log(data);\r\n      setUserData(data);\r\n      props.storeUsers(data.users);\r\n      if(data.currentUser.username!==\"\"){\r\n        props.navigation.navigate('Notes');\r\n      }\r\n      console.log(userData);\r\n      return data;\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  }\r\n\r\n  const checkCredentials = () => {\r\n    if (!userName || userName === '') {\r\n      setError('Please Enter user name');\r\n      return\r\n    }\r\n    if (!Password || Password === '') {\r\n      setError('Please enter Password');\r\n      return\r\n    }\r\n    console.log(userName, Password);\r\n    console.log(userData);\r\n    let users = userData?.users;\r\n    if (!users) {\r\n      users = [];\r\n    }\r\n    if (userData) {\r\n      let isExist = false;\r\n      for (let i = 0; i < userData.users.length; i++) {\r\n        if (userData.users[i].username == userName) {\r\n          isExist = true;\r\n          if (Password == userData.users[i].password) {\r\n            console.log(\"in true\");\r\n            userData.currentUser.username = userName;\r\n            storeData(userData);\r\n            setUserName('');\r\n            setPassword('');\r\n            setError('');\r\n            props.navigation.navigate('Notes');\r\n          }\r\n          else {\r\n            setError('Wrong Password');\r\n            return\r\n          }\r\n        }\r\n      }\r\n      if (!isExist) {\r\n        console.log(\"Need to creat account\");\r\n        setError(`User Doesn't Exist`);\r\n        return\r\n      }\r\n\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logintext}> Take Note </Text>\r\n      <View style={styles.login}>\r\n        <Text style={styles.lables}>User Name</Text>\r\n        <TextInput\r\n          style={styles.inputbox}\r\n          onChangeText={setUserName}\r\n          value ={userName}\r\n          placeholder=\"Enter Username\"\r\n        />\r\n        <Text style={styles.lables}>Password</Text>\r\n        <TextInput\r\n          style={styles.inputbox}\r\n          secureTextEntry={true}\r\n          onChangeText={setPassword}\r\n          value ={Password}\r\n          placeholder=\"Enter password\"\r\n        />\r\n        <Text style={styles.error}> {error} </Text>\r\n        <TouchableOpacity\r\n          style={styles.loginbutton}\r\n          onPress={() => {\r\n            checkCredentials();\r\n          }}\r\n        >\r\n          <Text style={{color:'white',fontWeight:'bold'}}>Login</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.signup} onPress={() => { props.navigation.navigate('CreateAccount',userData) }}>\r\n          <Text style={{fontWeight:'bold',textDecorationLine:'underline'}}>Sign Up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    storeUsers:(users)=>{dispatch(storeUsers(users))}\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    flex: 1,\r\n    backgroundColor: 'bisque',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontFamily: 'Arial',\r\n  },\r\n  container1: {\r\n    margin: 0,\r\n    padding: 0,\r\n    backgroundColor: '#fff',\r\n    fontFamily: 'Arial',\r\n  },\r\n  logintext: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: 'red',\r\n    padding: 20,\r\n    fontSize: 30,\r\n  },\r\n  login: {\r\n    justifyContent: 'center',\r\n    height: 300,\r\n    width: 300,\r\n    overflow: 'hidden',\r\n    marginTop: 10,\r\n    padding: 5,\r\n    backgroundColor: 'mintcream',\r\n    borderRadius: 15,\r\n  },\r\n  inputbox: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    marginHorizontal: 15,\r\n    border: 3,\r\n    borderColor: 'white'\r\n  },\r\n  loginbutton: {\r\n    marginTop: 20,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"yellowgreen\",\r\n    padding: 10\r\n  },\r\n  signup: {\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    justifyContent: 'flex-start',\r\n    alignContent: 'flex-end',\r\n    color: 'white',\r\n    alignItems: 'flex-end',\r\n  },\r\n  lables: {\r\n    padding: 15,\r\n    fontWeight:600,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  error:{\r\n    fontWeight:'bold',\r\n    color:'red'\r\n  }\r\n});\r\nexport default connect(null,mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport notesAnduserData from \"./notesAndUserData\";\n\nvar CreatAccount = function CreatAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(data);\n            setUserData(data);\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var addUser = function addUser() {\n    var isExist = false;\n\n    for (var i = 0; i < userData.users.length; i++) {\n      if (userData.users[i].username == userName) {\n        isExist = true;\n        alert(\"User Name exits try another\");\n      }\n    }\n\n    if (!isExist) {\n      userData.users.push({\n        username: userName,\n        password: Password\n      });\n    }\n  };\n\n  var showData = function showData() {\n    console.log(userData.users);\n\n    for (var i = 0; i < userData.users.length; i++) {\n      console.log(userData.users[i].username);\n    }\n\n    console.log(userData);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \" in signup\"), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUserName,\n    placeholder: \"Enter Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    placeholder: \"Enter password\"\n  })), React.createElement(Button, {\n    title: \"store data\",\n    onPress: function onPress() {\n      showData();\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('CreateAccount');\n    }\n  }, React.createElement(Text, null, \"Sign Up\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default CreatAccount;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/CreateAccount.js"],"names":["React","useEffect","useState","AsyncStorage","notesAnduserData","CreatAccount","navigation","userName","setUserName","Password","setPassword","userData","setUserData","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","data","parse","console","log","addUser","isExist","i","users","length","username","alert","push","password","showData","styles","container","input","navigate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport notesAnduserData from './notesAndUserData';\r\nconst CreatAccount = ({navigation}) => {\r\n    const [userName, setUserName] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    const storeData = async (value) => {\r\n        try {\r\n          const jsonValue = JSON.stringify(value)\r\n          await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n      useEffect(() => {\r\n        getData();\r\n      }, []);\r\n      const getData = async () => {\r\n        try {\r\n          const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n          const data = jsonValue && JSON.parse(jsonValue);\r\n          console.log(data);\r\n          setUserData(data);\r\n          return data;\r\n        } catch (e) {\r\n          // error reading value\r\n        }\r\n      }\r\n      const addUser=()=>{\r\n        let isExist = false;\r\n        for (let i = 0; i < userData.users.length; i++) {\r\n          if(userData.users[i].username == userName){\r\n            isExist=true;\r\n            alert(\"User Name exits try another\");\r\n          }\r\n        }\r\n        if(!isExist){\r\n          userData.users.push({username:userName,password:Password});\r\n        }\r\n      }\r\n    const showData = ()=>{\r\n      console.log(userData.users);\r\n      //userData.users.push({username:\"demo\",password:\"demo\"});\r\n      for (let i = 0; i < userData.users.length; i++) {\r\n        console.log(userData.users[i].username);\r\n      }\r\n      console.log(userData);\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n        <Text> in signup</Text>\r\n        <View>\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={setUserName}\r\n            placeholder=\"Enter Username\"\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={setPassword}\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </View>\r\n        <Button title=\"store data\" onPress={() => { showData() }}></Button>\r\n        <TouchableOpacity onPress={()=>{ navigation.navigate('CreateAccount')}}>\r\n        <Text>Sign Up</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      \r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });\r\nexport default CreatAccount;"]},"metadata":{},"sourceType":"module"}
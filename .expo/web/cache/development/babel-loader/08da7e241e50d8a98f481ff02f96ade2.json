{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar Notes = function Notes(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      notes = _useState6[0],\n      setNotes = _useState6[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesAndUserData', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            console.log(\"Log out pressed\");\n            userData.currentUser.username = '';\n            storeData(userData);\n            navigation.navigate('Login');\n          },\n          title: \"Logout\"\n        });\n      }\n    });\n  }, [navigation, userData]);\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [notes]);\n\n  var getData = function getData() {\n    var jsonValue, data, name;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notesAndUserData'));\n\n          case 3:\n            jsonValue = _context3.sent;\n            data = jsonValue && JSON.parse(jsonValue);\n            console.log(\"At getting data\", data);\n            setUserData(data);\n            name = data.currentUser.username;\n            console.log(currentUser);\n\n            if (!data.notes[name]) {\n              console.log(userData);\n              userData.notes[currentUser] = [];\n              storeData(userData);\n            }\n\n            console.log(userData);\n            setCurrentUser(data.currentUser.username);\n            setNotes(userData.notes[currentUser]);\n            _context3.next = 17;\n            break;\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var deleteNote = function deleteNote(id) {\n    console.log(\"id to be deleted\", id);\n  };\n\n  var showNotes = function showNotes() {\n    return React.createElement(View, null, userData.notes[currentUser].map(function (note, index) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'grey',\n          padding: 5,\n          marginVertical: 5,\n          flex: 1,\n          flexDirection: 'column',\n          elevation: 2\n        },\n        onPress: function onPress() {\n          navigation.navigate('ShowNote', note);\n        },\n        key: index\n      }, React.createElement(Text, {\n        style: {\n          marginHorizontal: 4,\n          fontWeight: 'bold',\n          flexDirection: 'column'\n        },\n        numberOfLines: 1\n      }, note.title), React.createElement(Text, {\n        style: {\n          flexDirection: 'column'\n        }\n      }, note.description.length < 35 ? \"\" + note.description : note.description.substring(0, 32) + \"...\"), React.createElement(View, {\n        style: {\n          alignItems: 'flex-end'\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          color: 'red',\n          backgroundColor: 'turquoise',\n          height: 25,\n          width: 48,\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          deleteNote(note.id);\n        }\n      }, React.createElement(Text, null, \"Delete\"))));\n    }));\n  };\n\n  var logout = function logout() {\n    userData.currentUser.username = \"\";\n    storeData(userData);\n    navigation.navigate('Login');\n  };\n\n  var addNotes = function addNotes() {\n    navigation.navigate('AddNotes');\n  };\n\n  return React.createElement(View, {\n    style: styles.container1\n  }, React.createElement(ScrollView, null, React.createElement(Text, null, \"In Notes\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      addNotes();\n    }\n  }, React.createElement(Text, null, \"Add Notes\")), React.createElement(View, null, currentUser && showNotes())));\n};\n\nvar styles = StyleSheet.create({\n  container1: {\n    margin: 0,\n    padding: 0,\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'khaki'\n  }\n});\nexport default Notes;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Notes.js"],"names":["React","useEffect","useState","AsyncStorage","Notes","navigation","userData","setUserData","currentUser","setCurrentUser","notes","setNotes","storeData","value","jsonValue","JSON","stringify","setItem","useLayoutEffect","setOptions","headerRight","console","log","username","navigate","getData","getItem","data","parse","name","deleteNote","id","showNotes","map","note","index","borderWidth","borderColor","padding","marginVertical","flex","flexDirection","elevation","marginHorizontal","fontWeight","title","description","length","substring","alignItems","color","backgroundColor","height","width","justifyContent","logout","addNotes","styles","container1","StyleSheet","create","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAChC,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AAIA,mBAAsCL,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,SAFQ,GAEIC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFJ;AAAA;AAAA,6CAGRV,YAAY,CAACc,OAAb,CAAqB,kBAArB,EAAyCH,SAAzC,CAHQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQAd,EAAAA,KAAK,CAACkB,eAAN,CAAsB,YAAM;AAC1Bb,IAAAA,UAAU,CAACc,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eACX,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,mBAAM;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAhB,YAAAA,QAAQ,CAACE,WAAT,CAAqBe,QAArB,GAA8B,EAA9B;AACAX,YAAAA,SAAS,CAACN,QAAD,CAAT;AACAD,YAAAA,UAAU,CAACmB,QAAX,CAAoB,OAApB;AACD,WALD;AAKG,UAAA,KAAK,EAAC;AALT,UADW;AAAA;AADO,KAAtB;AAUD,GAXD,EAWG,CAACnB,UAAD,EAAaC,QAAb,CAXH;AAYAL,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFwB,OAAO,EADL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAGN,CAACf,KAAD,CAHM,CAAT;;AAIA,MAAMe,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYtB,YAAY,CAACuB,OAAb,CAAqB,kBAArB,CAFZ;;AAAA;AAENZ,YAAAA,SAFM;AAGNa,YAAAA,IAHM,GAGCb,SAAS,IAAIC,IAAI,CAACa,KAAL,CAAWd,SAAX,CAHd;AAIZO,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,IAA/B;AAEApB,YAAAA,WAAW,CAACoB,IAAD,CAAX;AACIE,YAAAA,IAPQ,GAODF,IAAI,CAACnB,WAAL,CAAiBe,QAPhB;AAQZF,YAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;;AACA,gBAAI,CAACmB,IAAI,CAACjB,KAAL,CAAWmB,IAAX,CAAL,EAAuB;AACrBR,cAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAA,cAAAA,QAAQ,CAACI,KAAT,CAAeF,WAAf,IAA8B,EAA9B;AACAI,cAAAA,SAAS,CAACN,QAAD,CAAT;AACD;;AACDe,YAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAG,YAAAA,cAAc,CAACkB,IAAI,CAACnB,WAAL,CAAiBe,QAAlB,CAAd;AACAZ,YAAAA,QAAQ,CAACL,QAAQ,CAACI,KAAT,CAAeF,WAAf,CAAD,CAAR;AAhBY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAuBA,MAAMsB,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzBV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCS,EAAhC;AACD,GAFD;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,WACE,oBAAC,IAAD,QACG1B,QAAQ,CAACI,KAAT,CAAeF,WAAf,EAA4ByB,GAA5B,CAAgC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChD,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,CAAf;AAAkBC,UAAAA,WAAW,EAAE,MAA/B;AAAuCC,UAAAA,OAAO,EAAE,CAAhD;AAAmDC,UAAAA,cAAc,EAAE,CAAnE;AAAsEC,UAAAA,IAAI,EAAE,CAA5E;AAA+EC,UAAAA,aAAa,EAAE,QAA9F;AAAwGC,UAAAA,SAAS,EAAE;AAAnH,SADT;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAErC,UAAAA,UAAU,CAACmB,QAAX,CAAoB,UAApB,EAAgCU,IAAhC;AAAwC,SAF3D;AAGE,QAAA,GAAG,EAAEC;AAHP,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEQ,UAAAA,gBAAgB,EAAE,CAApB;AAAuBC,UAAAA,UAAU,EAAE,MAAnC;AAA2CH,UAAAA,aAAa,EAAE;AAA1D,SAAb;AAAmF,QAAA,aAAa,EAAE;AAAlG,SAAuGP,IAAI,CAACW,KAA5G,CALF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEJ,UAAAA,aAAa,EAAE;AAAjB;AAAb,SACEP,IAAI,CAACY,WAAL,CAAiBC,MAAjB,GAA0B,EAA1B,QACOb,IAAI,CAACY,WADZ,GAEOZ,IAAI,CAACY,WAAL,CAAiBE,SAAjB,CAA2B,CAA3B,EAA8B,EAA9B,CAFP,QADF,CANF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd;AAAb,SACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,eAAe,EAAE,WAAjC;AAA8CC,UAAAA,MAAM,EAAE,EAAtD;AAA0DC,UAAAA,KAAK,EAAE,EAAjE;AAAqEC,UAAAA,cAAc,EAAE;AAArF,SAAzB;AAA0H,QAAA,OAAO,EAAE,mBAAM;AAAExB,UAAAA,UAAU,CAACI,IAAI,CAACH,EAAN,CAAV;AAAqB;AAAhK,SACE,oBAAC,IAAD,iBADF,CADF,CAVF,CADF;AAkBD,KAnBA,CADH,CADF;AAwBD,GAzBD;;AA0BA,MAAMwB,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBjD,IAAAA,QAAQ,CAACE,WAAT,CAAqBe,QAArB,GAAgC,EAAhC;AAEAX,IAAAA,SAAS,CAACN,QAAD,CAAT;AACAD,IAAAA,UAAU,CAACmB,QAAX,CAAoB,OAApB;AACD,GALD;;AAMA,MAAMgC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBnD,IAAAA,UAAU,CAACmB,QAAX,CAAoB,UAApB;AACD,GAFD;;AAGA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiC,MAAM,CAACC;AAApB,KACE,oBAAC,UAAD,QACE,oBAAC,IAAD,mBADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM;AAC/BF,MAAAA,QAAQ;AACT;AAFD,KAGE,oBAAC,IAAD,oBAHF,CAFF,EAOE,oBAAC,IAAD,QACGhD,WAAW,IAAIwB,SAAS,EAD3B,CAPF,CADF,CAFF;AAkBD,CA9GD;;AA+GA,IAAMyB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,UAAU,EAAE;AACVG,IAAAA,MAAM,EAAE,CADE;AAEVvB,IAAAA,OAAO,EAAE,CAFC;AAGVE,IAAAA,IAAI,EAAE,CAHI;AAIVC,IAAAA,aAAa,EAAE,QAJL;AAKVU,IAAAA,eAAe,EAAE;AALP;AADmB,CAAlB,CAAf;AAWA,eAAe/C,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst Notes = ({ navigation }) => {\r\n  const [userData, setUserData] = useState({});\r\n  //let userData;\r\n  //let currentUser;\r\n  //let notes;\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [notes, setNotes] = useState([]);\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('notesAndUserData', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => (\r\n        <Button onPress={() => {\r\n          console.log(\"Log out pressed\");\r\n          userData.currentUser.username='';\r\n          storeData(userData);\r\n          navigation.navigate('Login');\r\n        }} title=\"Logout\" />\r\n      ),\r\n    });\r\n  }, [navigation, userData]);\r\n  useEffect(async () => {\r\n    await getData();\r\n    //await getNotes();\r\n  }, [notes]);\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('notesAndUserData');\r\n      const data = jsonValue && JSON.parse(jsonValue);\r\n      console.log(\"At getting data\", data);\r\n      //userData = data;\r\n      setUserData(data);\r\n      let name = data.currentUser.username;\r\n      console.log(currentUser);\r\n      if (!data.notes[name]) {\r\n        console.log(userData);\r\n        userData.notes[currentUser] = [];\r\n        storeData(userData);\r\n      }\r\n      console.log(userData);\r\n      setCurrentUser(data.currentUser.username);\r\n      setNotes(userData.notes[currentUser])\r\n      //notes = userData.notes[currentUser];\r\n      //getNotes();\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  }\r\n  const deleteNote = (id) => {\r\n    console.log(\"id to be deleted\", id);\r\n  }\r\n  const showNotes = () => {\r\n    return (\r\n      <View >\r\n        {userData.notes[currentUser].map((note, index) => {\r\n          return (\r\n            <TouchableOpacity\r\n              style={{ borderWidth: 1, borderColor: 'grey', padding: 5, marginVertical: 5, flex: 1, flexDirection: 'column', elevation: 2 }}\r\n              onPress={() => { navigation.navigate('ShowNote', note); }}\r\n              key={index}\r\n            >\r\n              <Text style={{ marginHorizontal: 4, fontWeight: 'bold', flexDirection: 'column' }} numberOfLines={1} >{note.title}</Text>\r\n              <Text style={{ flexDirection: 'column' }}>{\r\n                note.description.length < 35\r\n                  ? `${note.description}`\r\n                  : `${note.description.substring(0, 32)}...`}</Text>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableOpacity style={{ color: 'red', backgroundColor: 'turquoise', height: 25, width: 48, justifyContent: 'center' }} onPress={() => { deleteNote(note.id) }} >\r\n                  <Text>Delete</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          )\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n  const logout = () => {\r\n    userData.currentUser.username = \"\";\r\n    //console.log(\"userData\",userData);\r\n    storeData(userData);\r\n    navigation.navigate('Login');\r\n  }\r\n  const addNotes = () => {\r\n    navigation.navigate('AddNotes');\r\n  }\r\n  return (\r\n\r\n    <View style={styles.container1}>\r\n      <ScrollView>\r\n        <Text>In Notes</Text>\r\n        <TouchableOpacity onPress={() => {\r\n          addNotes()\r\n        }}>\r\n          <Text>Add Notes</Text>\r\n        </TouchableOpacity>\r\n        <View >\r\n          {currentUser && showNotes()}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container1: {\r\n    margin: 0,\r\n    padding: 0,\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    backgroundColor: 'khaki'\r\n  }\r\n\r\n\r\n});\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}
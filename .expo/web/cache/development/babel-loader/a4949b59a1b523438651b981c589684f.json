{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var value = {\n    username: 'test',\n    password: 'test123',\n    notes: []\n  };\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('test', jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var navigateOnCondition = function navigateOnCondition() {\n    var condition = checkCredentials();\n    console.log(condition);\n\n    if (condition) {\n      navigation.navigate('Notes');\n    }\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('test'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = jsonValue != null ? JSON.parse(jsonValue) : null;\n            console.log(data);\n            setUserData(data);\n            console.log(userData);\n            return _context2.abrupt(\"return\", data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var checkCredentials = function checkCredentials() {\n    console.log(userName, Password);\n    console.log(userData);\n\n    if (userData != null) {\n      if (Password === userData.password) {\n        console.log(\"in true\");\n        navigation.navigate('Notes');\n      } else {\n        alert('Wrong Password');\n      }\n    } else {\n      console.log(\"in false\");\n      alert('Create Account');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \" in Login\"), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUserName,\n    placeholder: \"Enter Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    placeholder: \"Enter password\"\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      checkCredentials();\n    }\n  })), React.createElement(Button, {\n    title: \"store data\",\n    onPress: function onPress() {\n      storeData(value);\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Saikiran Kolluru/Desktop/TakeNote/components/Login.js"],"names":["React","useEffect","useState","AsyncStorage","Login","navigation","userName","setUserName","Password","setPassword","userData","setUserData","value","username","password","notes","storeData","jsonValue","JSON","stringify","setItem","navigateOnCondition","condition","checkCredentials","console","log","navigate","getData","getItem","data","parse","alert","styles","container","input","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAChC,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,QAAQ,EAAE,MAAZ;AAAoBC,IAAAA,QAAQ,EAAE,SAA9B;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAAZ;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERK,YAAAA,SAFQ,GAEIC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAFJ;AAAA;AAAA,6CAGRT,YAAY,CAACiB,OAAb,CAAqB,MAArB,EAA6BH,SAA7B,CAHQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAIC,SAAS,GAAGC,gBAAgB,EAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAIA,SAAJ,EAAe;AACbjB,MAAAA,UAAU,CAACqB,QAAX,CAAoB,OAApB;AACD;AACF,GAND;;AAOAzB,EAAAA,SAAS,CAAC,YAAM;AACd0B,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYxB,YAAY,CAACyB,OAAb,CAAqB,MAArB,CAFZ;;AAAA;AAENX,YAAAA,SAFM;AAGNY,YAAAA,IAHM,GAGCZ,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACY,KAAL,CAAWb,SAAX,CAApB,GAA4C,IAH7C;AAIZO,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAlB,YAAAA,WAAW,CAACkB,IAAD,CAAX;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AANY,8CAOLmB,IAPK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAaA,MAAMN,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ,EAAsBE,QAAtB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;;AACA,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,UAAIF,QAAQ,KAAKE,QAAQ,CAACI,QAA1B,EAAoC;AAClCU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACApB,QAAAA,UAAU,CAACqB,QAAX,CAAoB,OAApB;AACD,OAHD,MAII;AACFK,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,KARD,MASK;AACHP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAM,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,GAhBD;;AAiBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD,oBADF,EAEE,oBAAC,IAAD,QACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,YAAY,EAAE3B,WAFhB;AAGE,IAAA,WAAW,EAAC;AAHd,IADF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEyB,MAAM,CAACE,KADhB;AAEE,IAAA,YAAY,EAAEzB,WAFhB;AAGE,IAAA,WAAW,EAAC;AAHd,IANF,EAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,mBAAM;AACnCc,MAAAA,gBAAgB;AACjB;AAFD,IAXF,CAFF,EAiBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAE,mBAAM;AAAEP,MAAAA,SAAS,CAACJ,KAAD,CAAT;AAAkB;AAA9D,IAjBF,CADF;AAqBD,CA1ED;;AA2EA,IAAMoB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AAQA,eAAepC,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button, StyleSheet, Text, View, TextInput } from 'react-native';\r\nconst Login = ({ navigation }) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [userData, setUserData] = useState([]);\r\n  let value = { username: 'test', password: 'test123', notes: [] };\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem('test', jsonValue)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n  const navigateOnCondition = () => {\r\n    let condition = checkCredentials();\r\n    console.log(condition);\r\n    if (condition) {\r\n      navigation.navigate('Notes');\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('test');\r\n      const data = jsonValue != null ? JSON.parse(jsonValue) : null;\r\n      console.log(data);\r\n      setUserData(data);\r\n      console.log(userData);\r\n      return data;\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  }\r\n\r\n  const checkCredentials = () => {\r\n    console.log(userName, Password);\r\n    console.log(userData);\r\n    if (userData != null) {\r\n      if (Password === userData.password) {\r\n        console.log(\"in true\");\r\n        navigation.navigate('Notes');\r\n      }\r\n      else{\r\n        alert('Wrong Password')\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"in false\");\r\n      alert('Create Account');\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text> in Login</Text>\r\n      <View>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={setUserName}\r\n          placeholder=\"Enter Username\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={setPassword}\r\n          placeholder=\"Enter password\"\r\n        />\r\n        <Button title=\"Login\" onPress={() => {\r\n          checkCredentials();\r\n        }}></Button>\r\n      </View>\r\n      <Button title=\"store data\" onPress={() => { storeData(value) }}></Button>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}